name: build MusicFree

on:
  schedule:
    - cron: 0 8 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: "忽略构建记录以重新构建"
        required: false
        type: boolean
      donotpublish:
        description: "构建后不提交发布新版"
        required: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: maotoumao
            repoName: MusicFree
            branchName: master
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} |grep -o "/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi

      - name: Checkout Source Code
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} ${{ matrix.repoName }}
          cd ${{ matrix.repoName }}
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%Y%m%d-%H%M' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Extra Modify
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          echo '修改VersionName'
          sed -i 's|subscribeUrl'\'');|subscribeUrl'\'') ?? '\''[{"url":"${{ secrets.SUBSCRIB_URL }}"}]'\'';|g' ../src/pages/setting/settingTypes/pluginSetting/views/pluginList.tsx
          sed -i "/versionName/s#[0-9a-zA-Z_\.\'\"-]\+\$#\'${{ env.tag }}\'#" android/app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/normal.jks android/app/normal.jks
          echo -e 'RELEASE_STORE_FILE=./normal.jks'                   >  android/keystore.properties
          echo -e 'RELEASE_KEY_ALIAS=${{ secrets.JKS_ALIAS }}'        >> android/keystore.properties
          echo -e 'RELEASE_STORE_PASSWORD=${{ secrets.JKS_PASSWD }}'  >> android/keystore.properties
          echo -e 'RELEASE_KEY_PASSWORD=${{ secrets.JKS_PASSWD }}'    >> android/keystore.properties

      - name: Compress Source Code
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          tar -cJf source-${{ env.commitS }}.tar.xz --exclude=.git --exclude=.github *

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Setup Gradle
        if: ${{ env.commit }}
        uses: gradle/gradle-build-action@v2

      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          npm install
          cd android && chmod a+x gradlew
          ./gradlew app:assembleRelease && cd -
          rm -rf apk && mkdir -p apk
          for file in `find -name "*.apk" -print`; do
            mv "$file" apk/${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}.apk
          done

      - name: Release Note
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ matrix.userName }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > apk/${{ matrix.userName }}-Release.log
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          else
            git log --pretty=format:%B ${{ env.commitS }}...${lastCommit:0:7} |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          fi

      - name: Whether Or Not to Publish
        if: ${{ inputs.donotpublish && env.commit }}
        run: |
          echo "commit=" >> $GITHUB_ENV

      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.userName }}-${{ matrix.repoName }}
          path: |
            ${{ matrix.repoName }}/apk/*

      - name: Release and Upload Assets
        uses: ncipollo/release-action@v1
        if: ${{ env.commit }}
        with:
          name: ${{ matrix.repoName }}_${{ env.tag }}
          tag: ${{ matrix.repoName }}_${{ env.tag }}
          bodyFile: ${{ matrix.repoName }}/apk/${{ matrix.userName }}-Release.log
          allowUpdates: true
          removeArtifacts: true
          artifacts: |
            ${{ matrix.repoName }}/apk/*.apk
            ${{ matrix.repoName }}/source-${{ env.commitS }}.*

      - name: Push to main
        if: ${{ env.commit }}
        continue-on-error: true
        run: |
          apkPath=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | grep "browser_download_url"| grep "[.]apk" | cut -d '"' -f 4)
          echo "apkPath is $apkPath"
          echo "ukey=$(curl ${{ secrets.SHORT_URL }} --data '{"cmd":"add","url":"${{ secrets.CF_PROXY }}'$apkPath'","keyPhrase":"","password":"${{ secrets.SHORT_KEY }}"}'|jq -r '.key')" >> $GITHUB_ENV
          rm -rf ${{ matrix.repoName }}
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin main

      - name: WechatWork
        if: ${{ env.commit }}
        uses: chf007/action-wechat-work@master
        env:
          WECHAT_WORK_BOT_WEBHOOK: ${{secrets.QYVX_WEBHOOK}}
        continue-on-error: true
        with:
          msgtype: text
          content: "新版通知: ${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}.apk, 下载地址\n ${{ secrets.SHORT_URL }}/${{ env.ukey }}"
