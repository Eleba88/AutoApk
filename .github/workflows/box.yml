name: build TVBox

on:
  schedule:
    - cron: 30 0 * * *
  workflow_dispatch:
    inputs:
      rebuild:
        description: "重新构建"
        required: false
        type: boolean
env:
  commit: ""
  daytime: ""
  tag: ""
  vname: ""
  renote: ""
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - userName: q215613905
          #   repoName: TVBoxOS
          #   branchName: main
          - userName: takagen99
            repoName: Box
            branchName: main
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check New Commit
        run: |
          repoPath="${{ matrix.userName }}/${{ matrix.repoName }}"
          commit=$(curl -sL https://github.com/$repoPath/commits/${{ matrix.branchName }} |grep -o "/$repoPath/commit/[a-z0-9]\+" |head -1 | cut -d\/ -f5)
          if ! grep -q "$commit" README.md || [ "${{ inputs.rebuild }}" == "true" ]; then
            git clone https://github.com/$repoPath -b ${{ matrix.branchName }}
            cd ${{ matrix.repoName }}
            vname=$(git log --date=format:'%Y%m%d-%H%M' --pretty=format:%cd ${commit:0:7} -1)
            daytime=$(git log --date=format:'%Y%m%d' --pretty=format:%cd ${commit:0:7} -1)
            echo "tag=${{ matrix.userName }}_${{ matrix.repoName }}_$vname" >> $GITHUB_ENV
            echo "commit=$commit" >> $GITHUB_ENV
            echo "vname=$vname" >> $GITHUB_ENV
            echo "daytime=$daytime" >> $GITHUB_ENV
          fi

      - name: Extra Modify
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          echo '修改VersionName'
          sed -i "/versionName/s/\".*\"/ \"${{ env.vname }}\"/" app/build.gradle
          sed -i "/android:text=/s#=\"#=\"${{ env.vname }}\\\\n\\\\n#" app/src/main/res/layout/dialog_about.xml
          sed -i '/HawkConfig.DEBUG_OPEN/a\putDefault(HawkConfig.API_URL, "${{ secrets.BOX_JSON }}");' app/src/main/java/com/github/tvbox/osc/base/App.java
          sed -i '/HawkConfig.DEBUG_OPEN/a\putDefault(HawkConfig.HOME_REC_STYLE, true);' app/src/main/java/com/github/tvbox/osc/base/App.java
          sed -i '/HawkConfig.DEBUG_OPEN/a\putDefault(HawkConfig.HOME_REC, 0);' app/src/main/java/com/github/tvbox/osc/base/App.java
          echo '修改签名'
          signingConfigs='ICAgIHNpZ25pbmdDb25maWdzIHtcCiAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICBteUNvbmZpZyB7XAogICAgICAgICAgICAgICAgc3RvcmVGaWxlIGZpbGUoUkVMRUFTRV9TVE9SRV9GSUxFKVwKICAgICAgICAgICAgICAgIHN0b3JlUGFzc3dvcmQgUkVMRUFTRV9TVE9SRV9QQVNTV09SRFwKICAgICAgICAgICAgICAgIGtleUFsaWFzIFJFTEVBU0VfS0VZX0FMSUFTXAogICAgICAgICAgICAgICAga2V5UGFzc3dvcmQgUkVMRUFTRV9LRVlfUEFTU1dPUkRcCiAgICAgICAgICAgICAgICB2MVNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICB2MlNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICBlbmFibGVWM1NpZ25pbmcgPSB0cnVlXAogICAgICAgICAgICAgICAgZW5hYmxlVjRTaWduaW5nID0gdHJ1ZVwKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgfVwKXA=='
          signingConfig='ICAgICAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICAgICAgc2lnbmluZ0NvbmZpZyBzaWduaW5nQ29uZmlncy5teUNvbmZpZ1wKICAgICAgICAgICAgfVwK'
          signingConfigs="$(echo "$signingConfigs" |base64 -d )"
          signingConfig="$(echo "$signingConfig" |base64 -d )"
          sed -i -e "/defaultConfig {/i\\$signingConfigs " -e "/debug {/a\\$signingConfig " -e "/release {/a\\$signingConfig " app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/normal.jks app/normal.jks
          sed -i '$a\RELEASE_STORE_FILE=./normal.jks'     ./gradle.properties
          sed -i '$a\RELEASE_KEY_ALIAS=${{ secrets.JKS_ALIAS }}'            ./gradle.properties
          sed -i '$a\RELEASE_STORE_PASSWORD=${{ secrets.JKS_PASSWD }}'       ./gradle.properties
          sed -i '$a\RELEASE_KEY_PASSWORD=${{ secrets.JKS_PASSWD }}'         ./gradle.properties

      - name: Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        if: ${{ env.commit }}
        uses: gradle/gradle-build-action@v2

      - name: Build With Gradle
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all

      - name: Release Note
        if: ${{ env.commit }}
        working-directory: ${{ matrix.repoName }}
        run: |
          rm -rf apk && mkdir -p apk
          for file in `find -name "*.apk" -print`; do
            mv "$file" apk/${{ env.tag }}.apk
          done
          apkPath="https://github.com/${{ github.repository }}/releases/download/${{ matrix.repoName }}_${{ env.tag }}/${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}.apk"
          curl ${{ secrets.SHORT_URL }} --data '{"cmd":"del","keyPhrase":"AAAAAA","password":"${{ secrets.SHORT_KEY }}"}'
          curl ${{ secrets.SHORT_URL }} --data '{"cmd":"add","url":"${{ secrets.CF_PROXY }}'$apkPath'","keyPhrase":"AAAAAA","password":"${{ secrets.SHORT_KEY }}"}'
          apkUrl="https://db2.518100.xyz/${{ matrix.userName }}_${{ matrix.repoName }}/${{env.daytime}}/${{ env.tag }}.apk"
          apkSize=$(stat -c%s apk/${{ env.tag }}.apk)
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          msg=$(git log --pretty=format:'%h - %s (%cr) <%an>' --abbrev-commit --topo-order ${lastCommit}^.. |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2-)
          cat app/build/outputs/apk/release/output-metadata.json | jq -c --arg content "$msg" --arg apkUrl "${{ secrets.SHORT_URL }}/AAAAAA" '{"pkgName": .applicationId, "versionName": .elements[0].versionName, "apkSize": "'$apkSize'","apkUrl": $apkUrl, "msg": $content | @sh}' >  apk/${{ env.tag }}-Release.log
          renote=$(jq -n --arg title "${{ env.tag }}-1616" --arg content "$msg" '{ "title": $title, "content": $content | @sh }')
          echo -e "$renote"
          echo "renote=$renote" >> $GITHUB_ENV

      - name: push-to-alist
        continue-on-error: true
        uses: wj2008/auto-push-alist@master
        if: ${{ env.commit }}
        with:
          username: ${{ secrets.ALS_UNAME }}
          password: ${{ secrets.ALS_PASSWD }}
          upUrl: ${{ secrets.ALS_URL }}
          saveDir: "${{ secrets.ALS_DIR }}/${{ matrix.userName }}_${{ matrix.repoName }}/${{env.daytime}}"
          upDir: ${{ matrix.repoName }}/apk

      - name: Webhook
        if: ${{ env.commit }}
        continue-on-error: true
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.WEBHOOK_URL }}
          headers: '{"repository": "joelwmale/webhook-action"}'
          body: "${{ env.renote }}"

      - name: Upload-Artifact
        uses: actions/upload-artifact@v3
        if: ${{ env.commit }}
        with:
          name: ${{ env.tag }}
          path: |
            ${{ matrix.repoName }}/apk/*

      - name: Release-and-Upload-Assets
        uses: ncipollo/release-action@v1
        if: ${{ env.commit }}
        with:
          name: ${{ env.tag }}
          tag: ${{ env.tag }}
          bodyFile: ${{ matrix.repoName }}/apk/${{ env.tag }}-Release.log
          allowUpdates: true
          removeArtifacts: true
          artifacts: |
            ${{ matrix.repoName }}/apk/*.apk

      - name: Push to main
        if: ${{ env.commit }}
        continue-on-error: true
        run: |
          rm -rf ${{ matrix.repoName }}
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          git add --all
          git commit -m "${{ env.commit }}"
          git push -u -f origin main
